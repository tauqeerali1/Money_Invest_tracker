{"ast":null,"code":"var _jsxFileName = \"/home/tauqeer/Downloads/React-Project/expense_tracker/src/components/Main/Form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\nimport formatDate from '../../../utils/formatDate';\nimport useStyles from './styles';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nconst initialState = {\n  amount: '',\n  category: '',\n  type: 'Income',\n  date: formatDate(new Date())\n};\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const {\n    addTransaction\n  } = useContext(ExpenseTrackerContext);\n  const {\n    segment\n  } = useSpeechContext();\n\n  const createTransaction = () => {\n    const transaction = { ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    };\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, segment && segment.words.map(w => w.value).join(\" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({ ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({ ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 54\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Amount\",\n    fullWidth: true,\n    value: formData.amount,\n    onChange: e => setFormData({ ...formData,\n      amount: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    label: \"Date\",\n    fullWidth: true,\n    value: formData.date,\n    onChange: e => setFormData({ ...formData,\n      date: formatDate(e.target.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Create\"));\n};\n\n_s(Form, \"DK0VEamKaN49d2A+oDqkJNWC4Ws=\", false, function () {\n  return [useStyles, useSpeechContext];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/tauqeer/Downloads/React-Project/expense_tracker/src/components/Main/Form/Form.jsx"],"names":["React","useState","useEffect","useContext","TextField","Typography","Grid","Button","FormControl","InputLabel","Select","MenuItem","ExpenseTrackerContext","v4","uuidv4","useSpeechContext","formatDate","useStyles","incomeCategories","expenseCategories","initialState","amount","category","type","date","Date","Form","classes","formData","setFormData","addTransaction","segment","createTransaction","transaction","Number","id","selectedCategories","words","map","w","value","join","e","target","c","button"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\n\nimport formatDate from '../../../utils/formatDate';\nimport useStyles from './styles'\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\n\nconst initialState = {\n    amount: '',\n    category: '',\n    type: 'Income',\n    date: formatDate(new Date()),\n}\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const {addTransaction} = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n\n    const createTransaction = () => {\n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() }\n\n        addTransaction(transaction);\n        setFormData(initialState);\n    }\n\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n  return (\n      <Grid container spacing={2}>\n          <Grid item xs={12}>\n              <Typography align='center' variant='subtitle2' gutterBottom>\n                  {segment && segment.words.map((w) => w.value).join(\" \")}\n              </Typography>\n          </Grid>\n          <Grid item xs={6}>\n              <FormControl fullWidth>\n                  <InputLabel>Type</InputLabel>\n                  <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value})}>\n                      <MenuItem value=\"Income\">Income</MenuItem>\n                      <MenuItem value=\"Expense\">Expense</MenuItem>\n                  </Select>\n              </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n              <FormControl fullWidth>\n                  <InputLabel>Category</InputLabel>\n                  <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n                      {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n                  </Select>\n              </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n              <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value})} />\n        </Grid>\n        <Grid item xs={6}>\n              <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value)})}/>\n          </Grid>\n          <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n      </Grid>\n  )\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}